name: Auto Release on Main Commit

on:
  push:
    branches:
      - master

permissions:
  contents: write  # Grants permission to create releases

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures all tags are fetched

      - name: Get latest tag and generate next version
        id: get_version
        run: |
          git fetch --tags  # Ensure all remote tags are available

          # Find the latest version tag
          LATEST_TAG=$(git tag --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)

          # Default first version
          if [[ -z "$LATEST_TAG" ]]; then
            VERSION="v0.0.1"
          else
            IFS='.' read -r -a parts <<< "${LATEST_TAG//v/}"
            MAJOR=${parts[0]}
            MINOR=${parts[1]}
            PATCH=${parts[2]}

            # Increment PATCH
            PATCH=$((PATCH + 1))

            # If PATCH reaches 10, reset to 0 and increase MINOR
            if [[ "$PATCH" -ge 10 ]]; then
              PATCH=0
              MINOR=$((MINOR + 1))
            fi

            # Build new version
            VERSION="v${MAJOR}.${MINOR}.${PATCH}"
          fi

          echo "New version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_ENV

      - name: Create and push new version tag
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Check if tag exists before pushing
          if git rev-parse ${{ env.version }} >/dev/null 2>&1; then
            echo "Tag ${{ env.version }} already exists, skipping."
          else
            git tag ${{ env.version }}
            git push origin ${{ env.version }}
          fi

      - name: Create versioned release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ env.version }}
          name: Release ${{ env.version }}
          body: |
            Auto-generated release for commit: ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Update latest tag
        run: |
          git tag -fa latest -m "Latest release"
          git push origin latest --force

  trigger_commit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main repo
        uses: actions/checkout@v4

      - name: Setup Git
        run: |
          git config --global user.name "afaryab"
          git config --global user.email "ahmadkokab@gmail.com"

      - name: Clone the target repository
        run: |
          git clone https://github.com/processton/cloud.git
          cd cloud
          git checkout prod

      - name: Make an empty commit
        run: |
          cd cloud
          git commit --allow-empty -m "Automated empty commit from venteforce on latest release $(date)"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/processton/cloud.git prod
